{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authData","isAuthorised","isInProcess","isAuthInProcess","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","ProfileStatusWithHooks","useState","status","localStatus","setlocalStatus","editMode","setEditMode","useEffect","onDoubleClick","isOwner","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileDataReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","createCustomField","Input","s","inputInfo","TextArea","areaInfo","type","keys","contacts","map","key","className","Contacts","formError","btnEditP","ProfileData","switchToEditMode","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactMean","contactValue","onClick","ProfileInfo","toggleFetching","descriptionBlock","src","photos","large","userDefaultPhoto","alt","inputSendImage","id","target","files","savePhoto","btnSendImage","htmlFor","initialValues","formData","updateProfileInfo","userId","then","Post","item","message","likeCount","maxLength","maxLengthCreator","PublishPostReduxForm","Field","placeholder","name","component","validate","requiredField","inputPost","btnSendPost","MyPosts","formatedPostsData","posts","elem","postsBlock","postTxtValue","addPost","MyPostsContainer","profileData","Profile","profileBlock","profileInfo","postContainer","ProfileContainer","UserID","match","params","showUserProfile","getUserStatus","refreshProfile","prevProps","toggleIsFetching","compose","showUserProfileThunckCreator","getStatusThunckCreator","updateStatusThunckCreator","saveProfilePhotoThunckCreator","updateProfileThunckCreator","withRouter"],"mappings":"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","file":"static/js/3.4e1384a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authData.isAuthorised,\r\n    isInProcess: state.authData.isAuthInProcess\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component  {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2yzNo\",\"fontImage\":\"ProfileInfo_fontImage__33zlM\",\"btnSendImage\":\"ProfileInfo_btnSendImage__2qcAv\",\"inputSendImage\":\"ProfileInfo_inputSendImage__3NyFg\",\"Contacts\":\"ProfileInfo_Contacts__16S0c\",\"formError\":\"ProfileInfo_formError__1kllg\",\"btnEditP\":\"ProfileInfo_btnEditP__2YsO1\",\"inputInfo\":\"ProfileInfo_inputInfo__3cfJH\",\"areaInfo\":\"ProfileInfo_areaInfo__1qXCD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1giM0\",\"posts\":\"MyPosts_posts__2TNe9\",\"inputPost\":\"MyPosts_inputPost__2fOYd\",\"btnSendPost\":\"MyPosts_btnSendPost__2wq0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2TPp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__fnQVW\",\"postContainer\":\"Profile_postContainer__1CiUq\",\"profileInfo\":\"Profile_profileInfo__1i-G5\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    // Пример использования hook / хуков\r\n    // Локальный стейт для сосхранения временного статуса и функции для его изменения\r\n    let [localStatus, setlocalStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    // Синхронизация статуса после изменения пропсов\r\n    useEffect( () => {\r\n        setlocalStatus(props.status);\r\n    },[props.status]);\r\n\r\n    // Активатор изменения статуса Юзера\r\n    const activateEditMode = () => {\r\n        if (props.isOwner) {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(localStatus);\r\n    }\r\n\r\n    // Метод обрабатывает изменение статуса. Отправляет инфу на сервак.\r\n    const onStatusChange = (e) => {\r\n            setlocalStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <>\r\n        { !editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n        </div>\r\n        }\r\n        { editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateEditMode}\r\n                   value={localStatus} onChange={onStatusChange}/>\r\n        </div>\r\n        }\r\n    </>\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {createCustomField, Input, TextArea} from './../../../../utils/validators/customTextArea'\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n        <b>Full name: </b> {createCustomField(\"Full name\", \"fullName\",Input, [], s.inputInfo)}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b> {createCustomField(\"About me\", \"aboutMe\",TextArea, [], s.areaInfo)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {createCustomField(\"\", \"lookingForAJob\",Input, [], null, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>Job description: </b>\r\n            {createCustomField(\"Job description\", \"lookingForAJobDescription\",TextArea, [], s.areaInfo)}\r\n        </div>\r\n          <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\r\n              return <div key={key} className={s.Contacts}>\r\n                  <b>{key}</b>\r\n                  {createCustomField(profile.contacts[key], \"contacts.\" + key, Input, [], s.inputInfo)}\r\n              </div>\r\n            })\r\n        } \r\n        {error && <div className={s.formError}>{error}</div>}\r\n        <button className={s.btnEditP}>save</button>\r\n    </form>\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({\r\n    // a unique name for the form\r\n    form: 'editProfileForm'\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport userDefaultPhoto from \"../../../../asets/images/userDefaultPhoto.png\";\r\nimport ProfileStatusWithHooks from \"../../ProfileStatus/ProfileStatusWithHooks\";\r\nimport { useState } from 'react';\r\nimport ProfileDataReduxForm from './ProfileDataForm'\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    // Отображаем прелодер, если инфа о профайле еще не подгрузилась\r\n    if (!props.profile) {\r\n        props.toggleFetching(true);\r\n        return <></>;\r\n    } else {\r\n        props.toggleFetching(false);\r\n    }\r\n    // Обновление фото\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    // Редактирование профайла\r\n    const onSubmit = (formData) => {\r\n        props.updateProfileInfo(formData, props.profile.userId).then(\r\n            () => {\r\n                setEditMode(false);   \r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHooks isOwner={props.isOwner} status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userDefaultPhoto} alt=\"ava\"></img>\r\n                {props.isOwner && <div>\r\n                    <input className={s.inputSendImage} id={\"input_file\"} type={\"file\"} onChange={onMainPhotoSelected} />\r\n                    <label className={s.btnSendImage} htmlFor={\"input_file\"}>Change avatar</label>\r\n                    </div>}\r\n                    {editMode \r\n                        ? <ProfileDataReduxForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> \r\n                        : <ProfileData switchToEditMode={ () => {setEditMode(true)}} isOwner={props.isOwner} profile={props.profile}/>}\r\n                    \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, switchToEditMode}) => {\r\n    return <div>\r\n        <div>\r\n            <b>Full name: </b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        <div>\r\n            <b>Job description: </b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        <b>Contacts: </b> {\r\n            Object.keys(profile.contacts).map(key => {\r\n                    return profile.contacts[key] && <Contacts key={key} contactMean={key} contactValue={profile.contacts[key]} />\r\n            })\r\n        }\r\n        {isOwner && <button className={s.btnEditP} onClick={switchToEditMode}>Edit information</button>}\r\n    </div>\r\n};\r\n\r\nconst Contacts = ({ contactMean, contactValue }) => {\r\n    return <div className={s.Contacts}><b>{contactMean}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn4.iconfinder.com/data/icons/halloween-colored-1/96/halloween_monster_zombie_96-512.png' alt=\"zombie ava\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../utils/validators/customTextArea\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    // создание массива тегов с постами для рендера\r\n    let formatedPostsData = props.posts.map((elem) => {\r\n        return <Post key={elem.id} message={elem.message} likeCount={elem.likeCount}/>;\r\n    });\r\n\r\n    // обработка события Publish Post\r\n    const onSubmit = (formData) => {\r\n        let {postTxtValue} = formData;\r\n        props.addPost(postTxtValue);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <PublishPostReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {formatedPostsData}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet maxLength = maxLengthCreator(50);\r\n\r\nconst PublishPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Type something here'} name={\"postTxtValue\"}\r\n                   component={TextArea} validate={[requiredField, maxLength]} className={s.inputPost}/>\r\n        </div>\r\n        <div>\r\n            <button className={s.btnSendPost}>Add post</button>\r\n        </div>\r\n    </form>\r\n};\r\n                                            // a unique name for the form\r\nconst PublishPostReduxForm = reduxForm({form: 'publishPostForm'})(PublishPostForm);\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileData.posts\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\"\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profileBlock}>\r\n            <div className={s.profileInfo} >\r\n                <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                             updateStatus={props.updateStatus} toggleFetching={props.toggleFetching}\r\n                             savePhoto={props.savePhoto} updateProfileInfo={props.updateProfileInfo}/>\r\n            </div>\r\n            {props.isOwner && <div className={s.postContainer}>\r\n                <MyPostsContainer />\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {    getStatusThunckCreator,\r\n            showUserProfileThunckCreator,\r\n            updateStatusThunckCreator,\r\n            saveProfilePhotoThunckCreator,\r\n            updateProfileThunckCreator } from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {toggleIsFetching} from \"../../redux/usersReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        // Берем параметр UserID из адресной строки\r\n        let UserID = this.props.match.params.userId;\r\n        if (!UserID) UserID = this.props.userId;\r\n        this.props.showUserProfile(UserID);\r\n        this.props.getUserStatus(UserID);\r\n    }\r\n\r\n    // Первая отрисовка страницы\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    // Обновление компоненты\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile isOwner ={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                updateProfileInfo={this.props.updateProfileInfo}\r\n                savePhoto={this.props.savePhoto}\r\n                toggleFetching={this.props.toggleIsFetching} />\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileData.profile,\r\n    status: state.profileData.status,\r\n    userId: state.authData.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{showUserProfile: showUserProfileThunckCreator,\r\n                            getUserStatus: getStatusThunckCreator,\r\n                            updateStatus: updateStatusThunckCreator,\r\n                            savePhoto: saveProfilePhotoThunckCreator,\r\n                            updateProfileInfo:updateProfileThunckCreator,\r\n                            toggleIsFetching: toggleIsFetching}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}