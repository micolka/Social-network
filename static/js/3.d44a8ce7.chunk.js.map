{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","authData","isAuthorised","isInProcess","isAuthInProcess","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","ProfileStatusWithHooks","useState","status","localStatus","setlocalStatus","editMode","setEditMode","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","ProfileInfo","profile","toggleFetching","className","s","descriptionBlock","src","photos","large","userDefaultPhoto","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Post","item","message","likeCount","maxLength","maxLengthCreator","PublishPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","TextArea","validate","requiredField","inputPost","btnSendPost","MyPosts","formatedPostsData","posts","map","elem","key","id","postsBlock","formData","postTxtValue","addPost","MyPostsContainer","profileData","Profile","profileBlock","profileInfo","postContainer","ProfileContainer","UserID","match","params","userId","showUserProfile","getUserStatus","toggleIsFetching","compose","showUserProfileThunckCreator","getStatusThunckCreator","updateStatusThunckCreator","withRouter"],"mappings":"sNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,SAASC,aACvBC,YAAaJ,EAAME,SAASG,kBAGnBC,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMT,OACT,kBAACM,EAAeE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAOtC,OAAOM,YAAQd,EAARc,CAAoCL,K,oBChB/CM,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,UAAY,iC,oBCAvFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,uBAAuB,UAAY,2BAA2B,YAAc,+B,oBCA/ID,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,aAAe,8BAA8B,cAAgB,+BAA+B,YAAc,+B,wICE7G,SAASC,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GIFhE,IA2CeC,EA3CgB,SAAC/B,GAAU,QAKFgC,mBAAShC,EAAMiC,QALb,GAKjCC,EALiC,KAKpBC,EALoB,SAMRH,oBAAS,GAND,GAMjCI,EANiC,KAMvBC,EANuB,KAStCC,qBAAW,WACPH,EAAenC,EAAMiC,UACvB,CAACjC,EAAMiC,SAgBT,OAAO,qCACAG,GACH,6BACI,0BAAMG,cAjBW,WACrBF,GAAY,KAgBgCrC,EAAMiC,QAAU,WAG1DG,GACF,6BACI,2BAAOI,WAAW,EAAMC,OAlBL,WACvBJ,GAAY,GACZrC,EAAM0C,aAAaR,IAiBRP,MAAOO,EAAaS,SAbZ,SAACC,GAChBT,EAAeS,EAAEC,cAAclB,aCY5BmB,EAjCK,SAAC9C,GAEjB,OAAKA,EAAM+C,SAIP/C,EAAMgD,gBAAe,GAGrB,6BAII,kBAAC,EAAD,CAAwBf,OAAQjC,EAAMiC,OAAQS,aAAc1C,EAAM0C,eAClE,yBAAKO,UAAWC,IAAEC,kBACd,yBAAKC,IAAmC,MAA9BpD,EAAM+C,QAAQM,OAAOC,MAAgBtD,EAAM+C,QAAQM,OAAOC,MAAQC,IACvEC,IAAI,QACT,6BACKxD,EAAM+C,QAAQU,UAEnB,6BACKzD,EAAM+C,QAAQW,SAEnB,6BACK1D,EAAM+C,QAAQY,eAAiB,4DAAiB,6DAChD3D,EAAM+C,QAAQa,+BAtB3B5D,EAAMgD,gBAAe,GACd,uC,4CCMAa,EAZF,SAAC7D,GACZ,OACE,yBAAKiD,UAAWC,IAAEY,MAChB,yBAAKV,IAAI,oGAAoGI,IAAI,eAChHxD,EAAM+D,QACP,6BACE,sCAAY/D,EAAMgE,c,iCCsBtBC,EAAYC,YAAiB,IAc3BC,EAAuBC,YAAU,CAACC,KAAM,mBAAjBD,EAZL,SAACpE,GACrB,OAAO,0BAAMsE,SAAUtE,EAAMuE,cACzB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,sBAAuBC,KAAM,eAC1CC,UAAWC,IAAUC,SAAU,CAACC,IAAeb,GAAYhB,UAAWC,IAAE6B,aAEnF,6BACI,4BAAQ9B,UAAWC,IAAE8B,aAArB,iBAOGC,EAxCC,SAACjF,GAGb,IAAIkF,EAAoBlF,EAAMmF,MAAMC,KAAI,SAACC,GACrC,OAAO,kBAAC,EAAD,CAAMC,IAAMD,EAAKE,GAAIxB,QAASsB,EAAKtB,QAASC,UAAWqB,EAAKrB,eASvE,OACI,yBAAKf,UAAWC,IAAEsC,YACd,wCACA,kBAACrB,EAAD,CAAsBG,SARb,SAACmB,GAAc,IACvBC,EAAgBD,EAAhBC,aACL1F,EAAM2F,QAAQD,MAOV,yBAAKzC,UAAWC,IAAEiC,OACbD,K,QCdFU,EADUzF,aAND,SAACb,GACrB,MAAO,CACH6F,MAAO7F,EAAMuG,YAAYV,SAIiB,CAACQ,aAA1BxF,CAAoC8E,G,kBCU9Ca,EAdC,SAAC9F,GACb,OACI,yBAAKiD,UAAWC,IAAE6C,cACd,yBAAK9C,UAAWC,IAAE8C,aACd,kBAAC,EAAD,CAAajD,QAAS/C,EAAM+C,QAASd,OAAQjC,EAAMiC,OACtCS,aAAc1C,EAAM0C,aAAcM,eAAgBhD,EAAMgD,kBAEzE,yBAAKC,UAAWC,IAAE+C,eACd,kBAAC,EAAD,S,gCCHVC,E,4LAKE,IAAIC,EAASpG,KAAKC,MAAMoG,MAAMC,OAAOC,OAChCH,IAAQA,EAASpG,KAAKC,MAAMsG,QACjCvG,KAAKC,MAAMuG,gBAAgBJ,GAC3BpG,KAAKC,MAAMwG,cAAcL,K,+BAKzB,OACI,kBAAC,EAAD,CAAUpD,QAAUhD,KAAKC,MAAM+C,QAASd,OAAQlC,KAAKC,MAAMiC,OACjDS,aAAc3C,KAAKC,MAAM0C,aAAcM,eAAgBjD,KAAKC,MAAMyG,uB,GAfzDvG,IAAML,WA0BtB6G,sBACXvG,aAPkB,SAACb,GAAD,MAAY,CAC9ByD,QAASzD,EAAMuG,YAAY9C,QAC3Bd,OAAQ3C,EAAMuG,YAAY5D,OAC1BqE,OAAQhH,EAAME,SAAS8G,UAIC,CAACC,gBAAiBI,IAClBH,cAAeI,IACflE,aAAcmE,IACdJ,iBAAkBA,MAC1CK,IACAlH,IANW8G,CAObR","file":"static/js/3.d44a8ce7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authData.isAuthorised,\r\n    isInProcess: state.authData.isAuthInProcess\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n            return <Component  {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2yzNo\",\"fontImage\":\"ProfileInfo_fontImage__33zlM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1giM0\",\"posts\":\"MyPosts_posts__2TNe9\",\"inputPost\":\"MyPosts_inputPost__2fOYd\",\"btnSendPost\":\"MyPosts_btnSendPost__2wq0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2TPp4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileBlock\":\"Profile_profileBlock__fnQVW\",\"postContainer\":\"Profile_postContainer__1CiUq\",\"profileInfo\":\"Profile_profileInfo__1i-G5\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    // Пример использования hook / хуков\r\n    // Локальный стейт для сосхранения временного статуса и функции для его изменения\r\n    let [localStatus, setlocalStatus] = useState(props.status);\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    // Синхронизация статуса после изменения пропсов\r\n    useEffect( () => {\r\n        setlocalStatus(props.status);\r\n    },[props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(localStatus);\r\n    }\r\n\r\n    // Метод обрабатывает изменение статуса. Отправляет инфу на сервак.\r\n    const onStatusChange = (e) => {\r\n            setlocalStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return <>\r\n        { !editMode &&\r\n        <div>\r\n            <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n        </div>\r\n        }\r\n        { editMode &&\r\n        <div>\r\n            <input autoFocus={true} onBlur={deActivateEditMode}\r\n                   value={localStatus} onChange={onStatusChange}/>\r\n        </div>\r\n        }\r\n    </>\r\n\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport userDefaultPhoto from \"../../../../asets/images/userDefaultPhoto.png\";\r\nimport ProfileStatusWithHooks from \"../../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // Отображаем прелодер, если инфа о профайле еще не подгрузилась\r\n    if (!props.profile) {\r\n        props.toggleFetching(true);\r\n        return <></>;\r\n    } else {\r\n        props.toggleFetching(false);\r\n    }\r\n    return (\r\n        <div>\r\n            {/*<div className={s.fontImage}>\r\n                <img src='https://images.unsplash.com/photo-1499084732479-de2c02d45fcc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80' alt=\"backImage\"></img>\r\n            </div>*/}\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : userDefaultPhoto}\r\n                     alt=\"ava\"></img>\r\n                <div>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div>\r\n                    {props.profile.aboutMe}\r\n                </div>\r\n                <div>\r\n                    {props.profile.lookingForAJob ? \"Ищу работу: \" : \"Ниче не ищу. \"}\r\n                    {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://cdn4.iconfinder.com/data/icons/halloween-colored-1/96/halloween_monster_zombie_96-512.png' alt=\"zombie ava\"></img>\r\n      {props.message}\r\n      <div>\r\n        <span>like {props.likeCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../utils/validators/customTextArea\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    // создание массива тегов с постами для рендера\r\n    let formatedPostsData = props.posts.map((elem) => {\r\n        return <Post key ={elem.id} message={elem.message} likeCount={elem.likeCount}/>;\r\n    });\r\n\r\n    // обработка события Publish Post\r\n    const onSubmit = (formData) => {\r\n        let {postTxtValue} = formData;\r\n        props.addPost(postTxtValue);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <PublishPostReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {formatedPostsData}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet maxLength = maxLengthCreator(50);\r\n\r\nconst PublishPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field placeholder={'Type something here'} name={\"postTxtValue\"}\r\n                   component={TextArea} validate={[requiredField, maxLength]} className={s.inputPost}/>\r\n        </div>\r\n        <div>\r\n            <button className={s.btnSendPost}>Add post</button>\r\n        </div>\r\n    </form>\r\n};\r\n                                            // a unique name for the form\r\nconst PublishPostReduxForm = reduxForm({form: 'publishPostForm'})(PublishPostForm);\r\n\r\nexport default MyPosts;","import {addPost} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileData.posts\r\n    };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\"\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profileBlock}>\r\n            <div className={s.profileInfo} >\r\n                <ProfileInfo profile={props.profile} status={props.status}\r\n                             updateStatus={props.updateStatus} toggleFetching={props.toggleFetching}/>\r\n            </div>\r\n            <div className={s.postContainer}>\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {    getStatusThunckCreator,\r\n            showUserProfileThunckCreator,\r\n            updateStatusThunckCreator } from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {toggleIsFetching} from \"../../redux/usersReducer\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    // Первая отрисовка страницы\r\n    componentDidMount() {\r\n        // Берем параметр UserID из адресной строки\r\n        let UserID = this.props.match.params.userId;\r\n        if (!UserID) UserID = this.props.userId;\r\n        this.props.showUserProfile(UserID);\r\n        this.props.getUserStatus(UserID);\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Profile  profile ={this.props.profile} status={this.props.status}\r\n                      updateStatus={this.props.updateStatus} toggleFetching={this.props.toggleIsFetching}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileData.profile,\r\n    status: state.profileData.status,\r\n    userId: state.authData.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{showUserProfile: showUserProfileThunckCreator,\r\n                            getUserStatus: getStatusThunckCreator,\r\n                            updateStatus: updateStatusThunckCreator,\r\n                            toggleIsFetching: toggleIsFetching}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}